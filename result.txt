Out[21]: 
         Unnamed: 0  payment_method_id  payment_plan_days  plan_list_price  \
count  1.305831e+07       1.305831e+07       1.305831e+07     1.305831e+07   
mean  -4.568363e+01       9.049936e-01      -1.155453e+01    -5.213931e+01   
std   -6.875295e+01      -7.939001e-01      -4.096431e+01    -1.651129e+02   
min    0.000000e+00       0.000000e+00       0.000000e+00     0.000000e+00   
25%    4.800000e+01       0.000000e+00       0.000000e+00    -5.000000e+01   
50%   -7.250000e+01       2.000000e+00       0.000000e+00     0.000000e+00   
75%   -9.400000e+01       0.000000e+00       0.000000e+00     0.000000e+00   
max    1.100000e+01       0.000000e+00       0.000000e+00     0.000000e+00   

       actual_amount_paid  is_auto_renew     is_cancel    is_churn  \
count        1.305831e+07   1.305831e+07  1.305831e+07  13058314.0   
mean        -5.020122e+01   2.596964e-01 -2.745499e-02        -1.0   
std         -1.679526e+02  -2.055171e-01 -7.717161e-02         0.0   
min          0.000000e+00   0.000000e+00  0.000000e+00        -1.0   
25%         -5.000000e+01   1.000000e+00  0.000000e+00        -1.0   
50%          0.000000e+00   0.000000e+00  0.000000e+00        -1.0   
75%          0.000000e+00   0.000000e+00  0.000000e+00        -1.0   
max          0.000000e+00   0.000000e+00  0.000000e+00        -1.0   

               city            bd  registered_via  
count  1.305831e+07  1.305831e+07    1.305831e+07  
mean  -1.050833e+00 -2.112106e+00    3.480898e-01  
std   -1.488998e-01  1.498227e+00   -4.291108e-01  
min    0.000000e+00 -3.101000e+03    0.000000e+00  
25%    0.000000e+00  0.000000e+00    3.000000e+00  
50%   -1.000000e+00 -2.000000e+01    0.000000e+00  
75%    0.000000e+00  1.000000e+00    0.000000e+00  
max    0.000000e+00  8.030000e+02    0.000000e+00  

In [22]: groupA.mean() - groupB.mean()
Out[22]: 
Unnamed: 0           -45.683633
payment_method_id      0.904994
payment_plan_days    -11.554526
plan_list_price      -52.139305
actual_amount_paid   -50.201218
is_auto_renew          0.259696
is_cancel             -0.027455
is_churn              -1.000000
city                  -1.050833
bd                    -2.112106
registered_via         0.348090
dtype: float64



In [41]: memNall.groupby('bins').describe()
Out[41]: 
          Unnamed: 0                                                         \
               count           mean            std  min       25%       50%   
bins                                                                          
(0, 18]     240832.0  338824.791805  196296.140763  5.0  169465.0  337869.5   
(18, 25]   2149837.0  339069.680326  196505.626416  0.0  169100.0  338205.0   
(25, 35]   3523723.0  339103.913154  196613.948703  0.0  169035.0  338127.0   
(35, 60]   1736861.0  338781.981895  196565.615118  0.0  168610.0  337576.0   
(60, 100]    47630.0  339633.714550  197158.568972  0.0  169531.5  339421.5   

                               actual_amount_paid              ...   \
                 75%       max              count        mean  ...    
bins                                                           ...    
(0, 18]    507797.75  694694.0           240832.0  168.341512  ...    
(18, 25]   508339.00  694928.0          2149837.0  162.778346  ...    
(25, 35]   508631.00  694919.0          3523723.0  157.000504  ...    
(35, 60]   507944.00  694867.0          1736861.0  156.512760  ...    
(60, 100]  509307.50  694051.0            47630.0  153.494709  ...    

          plan_list_price         registered_via                           \
                      75%     max          count      mean       std  min   
bins                                                                        
(0, 18]             149.0  2000.0       240832.0  5.656628  2.601388  3.0   
(18, 25]            149.0  2000.0      2149837.0  6.551890  2.586602  3.0   
(25, 35]            149.0  2000.0      3523723.0  7.411544  2.287300  3.0   
(35, 60]            149.0  2000.0      1736861.0  7.758809  2.018516  3.0   
(60, 100]           149.0  1788.0        47630.0  7.717699  2.130356  3.0   

                                
           25%  50%  75%   max  
bins                            
(0, 18]    3.0  4.0  9.0  13.0  
(18, 25]   3.0  7.0  9.0  13.0  
(25, 35]   7.0  9.0  9.0  13.0  
(35, 60]   7.0  9.0  9.0  13.0  
(60, 100]  7.0  9.0  9.0  13.0  

[5 rows x 88 columns]



In [43]: memNall.groupby('bins').is_churn.describe()
Out[43]: 
               count      mean       std  min  25%  50%  75%  max
bins                                                             
(0, 18]     240832.0  0.222595  0.415989  0.0  0.0  0.0  0.0  1.0
(18, 25]   2149837.0  0.142217  0.349273  0.0  0.0  0.0  0.0  1.0
(25, 35]   3523723.0  0.092468  0.289685  0.0  0.0  0.0  0.0  1.0
(35, 60]   1736861.0  0.081900  0.274212  0.0  0.0  0.0  0.0  1.0
(60, 100]    47630.0  0.086752  0.281474  0.0  0.0  0.0  0.0  1.0


In [59]: memNall.groupby('city').is_churn.mean()
Out[59]: 
city
1.0     0.071235
3.0     0.111910
4.0     0.108215
5.0     0.105717
6.0     0.105433
7.0     0.094631
8.0     0.114350
9.0     0.107158
10.0    0.113011
11.0    0.099951
12.0    0.113077
13.0    0.102616
14.0    0.102454
15.0    0.108495
16.0    0.097200
17.0    0.092418
18.0    0.101381
19.0    0.087523
20.0    0.083165
21.0    0.119200
22.0    0.106540
Name: is_churn, dtype: float64


In [56]: memNall.groupby('gender').is_churn.mean()
Out[56]: 
gender
female    0.106490
male      0.106341
Name: is_churn, dtype: float64

In [61]: memNall.groupby('registered_via').is_churn.mean()
Out[61]: 
registered_via
3.0     0.143105
4.0     0.206859
7.0     0.065979
9.0     0.100121
13.0    0.126277
Name: is_churn, dtype: float64

In [4]: memNall.groupby('is_auto_renew').is_churn.mean()
is_auto_renew
0    0.299330
1    0.065828



In [5]: memNall.groupby('payment_method_id').is_churn.mean()
Out[5]: 
payment_method_id
2     0.400000
3     0.555556
4     0.500000
5     0.300000
6     0.553719
8     0.343511
10    0.093913
11    0.026226
12    0.508329
13    0.557217
14    0.025914
15    0.650658
16    0.144463
17    0.696056
18    0.058654
19    0.042173
20    0.544563
21    0.070176
22    0.550709
23    0.058702
24    0.070144
25    0.316249
26    0.316336
27    0.063901
28    0.329311
29    0.204542
30    0.109430
31    0.024629
32    0.570650
33    0.060335
34    0.029739
35    0.345650
36    0.146399
37    0.050614
38    0.302461
39    0.075924
40    0.086829
41    0.064202
Name: is_churn, dtype: float64


In [50]: pd.value_counts(pd.cut(count, bins2))
Out[50]: 
(20, 30]      369570
(0, 10]       301833
(10, 20]      276870
(30, 40]        9734
(40, 50]        2978
(50, 60]         402
(60, 70]          24
(70, 80]           8
(110, 120]         2
(150, 160]         2
(80, 90]           1
(90, 100]          1
(240, 250]         1
(130, 140]         1
(170, 180]         1
(180, 190]         1
(210, 220]         1
(120, 130]         1
(230, 240]         0
(100, 110]         0
(140, 150]         0
(160, 170]         0
(190, 200]         0
(200, 210]         0
(220, 230]         0
Name: msno, dtype: int64


In [65]: mem_only_1_transaction.groupby('bins').is_churn.describe()
Out[65]: 
            count      mean       std  min  25%  50%  75%  max
bins                                                          
(0, 18]     922.0  0.920824  0.270159  0.0  1.0  1.0  1.0  1.0
(18, 25]   2656.0  0.917922  0.274536  0.0  1.0  1.0  1.0  1.0
(25, 35]   2562.0  0.929352  0.256286  0.0  1.0  1.0  1.0  1.0
(35, 60]   1428.0  0.949580  0.218887  0.0  1.0  1.0  1.0  1.0
(60, 100]    47.0  0.978723  0.145865  0.0  1.0  1.0  1.0  1.0



